1738634601
84e399b8f2181ccd73394fdeddff1638-phpdoc%3Aafc0fd15861911de695b5d2a7b4ea7ee-e869e569a3ebb0b342cd22e1ee8cd66a
s:47048:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjIyOiJzdHVkZW50X2V2YWx1YXRpb24ucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImU4NjllNTY5YTNlYmIwYjM0MmNkMjJlMWVlOGNkNjZhIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MzQ6InBhZ2VzL2NoYWlyL3N0dWRlbnRfZXZhbHVhdGlvbi5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjM0MzYwOiI8P3BocA0KaW5jbHVkZV9vbmNlKCcuLi8uLi9jb25uLnBocCcpOw0KaW5jbHVkZV9vbmNlKCcuLi8uLi9mdW5jdGlvbnMucGhwJyk7DQppbmNsdWRlX29uY2UoJ2hlYWRlci5waHAnKTsNCg0KaWYgKGlzc2V0KCRfUE9TVFsnY2hhbmdlX3llYXInXSkpIHsNCiAgZXh0cmFjdChhcnJheV9tYXAoJ2FkZHNsYXNoZXMnLCAkX1BPU1QpKTsNCiAgcXVlcnkoIlVQREFURSBzdHVkZW50X3RibCBzZXQgeWVhcl9pZCA9ICckeWVhcl9pZCcsIHNlbWVzdGVyX2lkID0gJyRzZW1lc3Rlcl9pZCcsYGNvbmZpcm1lZGAgPSAwICB3aGVyZSBzdHVkZW50X2lkID0gIiAuICRzdHVkZW50X2lkKTsNCiAgcXVlcnkoIkRFTEVURSBGUk9NIHJlY29tbWVuZGVkX3N1YmplY3RzX3RibCB3aGVyZSBzdHVkZW50X2lkID0gIiAuICRzdHVkZW50X2lkKTsNCiAgZWNobyBtZXNzYWdlX3N1Y2Nlc3MoIlN0dWRlbnQgVXBkYXRlZCEiKTsNCn0NCg0KaWYgKGlzc2V0KCRfUE9TVFsnZmVlZGJhY2snXSkpIHsNCiAgZXh0cmFjdChhcnJheV9tYXAoJ2FkZHNsYXNoZXMnLCAkX1BPU1QpKTsNCiAgcXVlcnkoIlVQREFURSByZWNvbW1lbmRlZF9zdWJqZWN0c190Ymwgc2V0IGZlZWRiYWNrID0gJyRmZWVkYmFjaycgIHdoZXJlIHJlY29tbWVuZGVkX3N1YmplY3RfaWQgPSAiIC4gJHJlY29tbWVuZGVkX3N1YmplY3RfaWQpOw0KICBlY2hvIG1lc3NhZ2Vfc3VjY2VzcygiVXBkYXRlZCBGZWVkYmFjayEiKTsNCn0NCmlmIChpc3NldCgkX0dFVFsnc2F2ZV9zdWJqZWN0cyddKSkgew0KICBleHRyYWN0KCRfR0VUKTsNCiAgLy8gcmVjb21tZW5kZWRfc3ViamVjdHNfdGJsDQogICRzdWJqZWN0cyA9IGV4cGxvZGUoIiwiLCAkX0dFVFsnc3ViamVjdHMnXSk7DQogICRwcmVzdWJqZWN0cyA9IGV4cGxvZGUoIiwiLCAkX0dFVFsncHJlc3ViamVjdHMnXSk7DQogICRzdHVkZW50ID0gZ2V0X29uZSgic2VsZWN0ICogZnJvbSBzdHVkZW50X3RibCB3aGVyZSBzdHVkZW50X2lkID0gIiAuICRzdHVkZW50X2lkKTsNCiAgcXVlcnkoIkRFTEVURSBGUk9NIHJlY29tbWVuZGVkX3N1YmplY3RzX3RibCB3aGVyZSBzdHVkZW50X2lkID0gIiAuICRzdHVkZW50X2lkKTsNCg0KICBmb3JlYWNoICgkc3ViamVjdHMgYXMgJGtleSA9PiAkcmVzKSB7DQogICAgcXVlcnkoIkRFTEVURSAgZnJvbSBzdHVkZW50X3N1YmplY3RzX3RibCB3aGVyZSBzdWJqZWN0X2lkID0gJyIgLiAkcmVzIC4gIicgIGFuZCBzdHVkZW50X2lkID0gJyIgLiAkc3R1ZGVudF9pZCAuICInIik7DQogICAgcXVlcnkoIklOU0VSVCBJTlRPIHN0dWRlbnRfc3ViamVjdHNfdGJsIChzdHVkZW50X2lkLHN1YmplY3RfaWQseWVhcl9pZCxzZW1lc3Rlcl9pZCxwcmVfc3ViamVjdF9pZCkgVkFMVUVTICgnIiAuICRzdHVkZW50X2lkIC4gIicsJyIgLiAkcmVzIC4gIicsJyR5ZWFyX2lkJywgJyRzZW1lc3Rlcl9pZCcsJyIgLiAkcHJlc3ViamVjdHNbJGtleV0gLiAiJykiKTsNCiAgICBxdWVyeSgiSU5TRVJUIElOVE8gcmVjb21tZW5kZWRfc3ViamVjdHNfdGJsIChzdHVkZW50X2lkLHN1YmplY3RfaWQseWVhcl9pZCxzZW1lc3Rlcl9pZCxwcmVfc3ViamVjdF9pZCkgVkFMVUVTICgnIiAuICRzdHVkZW50X2lkIC4gIicsJyIgLiAkcmVzIC4gIicsJyR5ZWFyX2lkJywgJyRzZW1lc3Rlcl9pZCcsJyIgLiAkcHJlc3ViamVjdHNbJGtleV0gLiAiJykiKTsNCiAgfQ0KICAvLyBxdWVyeSgiSU5TRVJUIElOVE8gcmVjb21tZW5kZWRfc3ViamVjdHNfdGJsIChzdHVkZW50X2lkLHN1YmplY3RfaWQseWVhcl9pZCxzZW1lc3Rlcl9pZCxwcmVfc3ViamVjdF9pZCkgU0VMRUNUICckc3R1ZGVudF9pZCcsIGMuc3ViamVjdF9pZCxjLnllYXJfaWQsYy5zZW1lc3Rlcl9pZCxjLnByZV9zdWJqZWN0X2lkIEZST00gY3VycmljdWx1bV9zdWJqZWN0c190YmwgYyBXSEVSRSAgYy5jdXJyaWN1bHVtX2lkIDw9ICckY3VycmljdWx1bV9pZCcgYW5kIGMueWVhcl9pZCA8PSAnIiAuICRzdHVkZW50LT55ZWFyX2lkIC4gIicgQU5EIGMuc2VtZXN0ZXJfaWQgPD0iIC4gJHN0dWRlbnQtPnNlbWVzdGVyX2lkIC4gIiBBTkQgYy5zdWJqZWN0X2lkIElOIChTRUxFQ1Qgc3ViamVjdF9pZCBmcm9tIHN0dWRlbnRfc3ViamVjdHNfdGJsIFdIRVJFIGdyYWRlX2lkIElOKDExLDEyLDEzLDE0LDE1KSkiKTsNCg0KICBxdWVyeSgiVVBEQVRFIHN0dWRlbnRfdGJsIHNldCBgY29uZmlybWVkYCA9ICcxJyAgd2hlcmUgc3R1ZGVudF9pZCA9ICIgLiAkc3R1ZGVudF9pZCk7DQogIGVjaG8gbWVzc2FnZV9zdWNjZXNzKCJTdWJqZWN0cyBTYXZlZCEiKTsNCn0NCg0KaWYgKGlzc2V0KCRfUE9TVFsnY2hhbmdlX3N0YXR1cyddKSkgew0KICBleHRyYWN0KGFycmF5X21hcCgnYWRkc2xhc2hlcycsICRfUE9TVCkpOw0KICBxdWVyeSgiVVBEQVRFIHN0dWRlbl9maWxlX3RibCBzZXQgZXZhbHVhdGlvbl9zdGF0dXNfaWQgPSAnJGV2YWx1YXRpb25fc3RhdHVzX2lkJyAgd2hlcmUgc3R1ZGVuX2ZpbGVfaWQgPSAiIC4gJGNoYW5nZV9zdGF0dXMpOw0KICBlY2hvIG1lc3NhZ2Vfc3VjY2VzcygiQ2hhbmdlZCBTdGF0dXMhIik7DQp9DQoNCg0KLy8gaWYgKGlzc2V0KCRfUE9TVFsnZmVlZGJhY2snXSkpIHsNCi8vICAgZXh0cmFjdChhcnJheV9tYXAoJ2FkZHNsYXNoZXMnLCAkX1BPU1QpKTsNCi8vICAgcXVlcnkoIlVQREFURSByZWNvbW1lbmRlZF9zdWJqZWN0c190Ymwgc2V0IGZlZWRiYWNrPSckZmVlZGJhY2snIFdIRVJFIHJlY29tbWVuZGVkX3N1YmplY3RfaWQgPSAiIC4gJHJlY29tbWVuZGVkX3N1YmplY3RfaWQpOw0KLy8gICBlY2hvIG1lc3NhZ2Vfc3VjY2VzcygiVXBkYXRlZCBTdWNjZXNzZnVsbHkhIik7DQovLyB9DQoNCmlmIChpc3NldCgkX1BPU1RbJ2RlbGV0ZV9yZWNvbW1lbmRhdGlvbiddKSkgew0KICBxdWVyeSgiREVMRVRFIEZST00gcmVjb21tZW5kZWRfc3ViamVjdHNfdGJsIHdoZXJlIHJlY29tbWVuZGVkX3N1YmplY3RfaWQgPSAiIC4gJF9QT1NUWydkZWxldGVfcmVjb21tZW5kYXRpb24nXSk7DQogIGVjaG8gbWVzc2FnZV9zdWNjZXNzKCJEZWxldGVkIFN1Y2Nlc3NmdWxseSEiKTsNCn0NCmlmIChpc3NldCgkX1BPU1RbJ2RlbGV0ZV9zdWJqZWN0J10pKSB7DQogIGV4dHJhY3QoJF9QT1NUKTsNCiAgcXVlcnkoIkRFTEVURSBGUk9NIHJlY29tbWVuZGVkX3N1YmplY3RzX3RibCB3aGVyZSByZWNvbW1lbmRlZF9zdWJqZWN0X2lkID0gIiAuICRfUE9TVFsnZGVsZXRlX3N1YmplY3QnXSk7DQogIHF1ZXJ5KCJERUxFVEUgRlJPTSBzdHVkZW50X3N1YmplY3RzX3RibCB3aGVyZSBzdHVkZW50X2lkID0gJyIgLiAkX1BPU1RbJ3N0dWRlbnRfaWQnXSAuICInIGFuZCBzdWJqZWN0X2lkID0gIiAuICRfUE9TVFsnc3ViamVjdF9pZCddKTsNCiAgZWNobyBtZXNzYWdlX3N1Y2Nlc3MoIlN1YmplY3QgRGVsZXRlZCBTdWNjZXNzZnVsbHkhIik7DQp9DQppZiAoaXNzZXQoJF9QT1NUWydhZGRfc3ViamVjdCddKSkgew0KICBleHRyYWN0KCRfUE9TVCk7DQogIGlmIChpbnR2YWwoJGN0cikgKyBpbnR2YWwoJHN1YmplY3RfdW5pdCkgPiAkbWF4X3VuaXRzKSB7DQogICAgZWNobyBtZXNzYWdlX2Vycm9yKCJNYXhpbXVtIHVuaXRzIGV4Y2VlZCEiKTsNCiAgICByZXR1cm47DQogIH0NCiAgcXVlcnkoIklOU0VSVCBJTlRPIHN0dWRlbnRfc3ViamVjdHNfdGJsIChzdHVkZW50X2lkLHN1YmplY3RfaWQseWVhcl9pZCxzZW1lc3Rlcl9pZCxwcmVfc3ViamVjdF9pZCkgVkFMVUVTICgnJHN0dWRlbnRfaWQnLCckYWRkX3N1YmplY3QnLCckeWVhcl9pZCcsJyRzZW1lc3Rlcl9pZCcsJyRwcmVfc3ViamVjdF9pZCcpIik7DQogIHF1ZXJ5KCJJTlNFUlQgSU5UTyByZWNvbW1lbmRlZF9zdWJqZWN0c190YmwgKHN0dWRlbnRfaWQsc3ViamVjdF9pZCx5ZWFyX2lkLHNlbWVzdGVyX2lkLHByZV9zdWJqZWN0X2lkKSBWQUxVRVMgKCckc3R1ZGVudF9pZCcsJyRhZGRfc3ViamVjdCcsJyR5ZWFyX2lkJywnJHNlbWVzdGVyX2lkJywnJHByZV9zdWJqZWN0X2lkJykiKTsNCiAgZWNobyBtZXNzYWdlX3N1Y2Nlc3MoIlN1YmplY3QgQWRkZWQgU3VjY2Vzc2Z1bGx5ISIpOw0KfQ0KaWYgKGlzc2V0KCRfUE9TVFsnZGVsZXRlJ10pKSB7DQogIHF1ZXJ5KCJERUxFVEUgRlJPTSBzdHVkZW50X3N1YmplY3RzX3RibCB3aGVyZSBzdHVkZW50X3N1YmplY3RfaWQgPSAiIC4gJF9QT1NUWydkZWxldGUnXSk7DQogIGVjaG8gbWVzc2FnZV9zdWNjZXNzKCJEZWxldGVkIFN1Y2Nlc3NmdWxseSEiKTsNCn0NCmlmIChpc3NldCgkX1BPU1RbJ2dyYWRlJ10pKSB7DQogIGV4dHJhY3QoYXJyYXlfbWFwKCdhZGRzbGFzaGVzJywgJF9QT1NUKSk7DQogIHF1ZXJ5KCJVUERBVEUgc3R1ZGVudF9zdWJqZWN0c190Ymwgc2V0IGdyYWRlX2lkID0gJyRncmFkZV9pZCcgIHdoZXJlIHN0dWRlbnRfc3ViamVjdF9pZCA9ICIgLiAkX1BPU1RbJ2dyYWRlJ10pOw0KICBlY2hvIG1lc3NhZ2Vfc3VjY2VzcygiVXBkYXRlZCBTdWNjZXNzZnVsbHkhIik7DQp9DQoNCmlmIChpc3NldCgkX1BPU1RbJ2NyZWF0ZV9yZWNvbW1lbmRhdGlvbiddKSkgew0KICBleHRyYWN0KGFycmF5X21hcCgnYWRkc2xhc2hlcycsICRfUE9TVCkpOw0KICAkY2hlY2tfZXhpc3RzID0gZ2V0X29uZSgiU0VMRUNUIGlmKG1heChyZWNvbW1lbmRlZF9zdWJqZWN0X2lkKSBpcyBudWxsLCAwLCBtYXgocmVjb21tZW5kZWRfc3ViamVjdF9pZCkgKyAxKSBhcyBgcmVzYCBmcm9tIHJlY29tbWVuZGVkX3N1YmplY3RzX3RibCAgd2hlcmUgICBzdHVkZW50X2lkID0gJyRzdHVkZW50X2lkJyBhbmQgIHN1YmplY3RfaWQgPSAnJHN1YmplY3RfaWQnIGFuZCAgeWVhcl9pZCA9ICckeWVhcl9pZCcgIGFuZCAgc2VtZXN0ZXJfaWQgPSAnJHNlbWVzdGVyX2lkJyAgbGltaXQgMSIpOw0KDQogIGlmICghZW1wdHkoJGNoZWNrX2V4aXN0cy0+cmVzKSkgew0KICAgIGVjaG8gbWVzc2FnZV9lcnJvcigiUmVjb3JkIEFscmVhZHkgRXhpc3RzISIpOw0KICB9IGVsc2Ugew0KICAgIHF1ZXJ5KCJJTlNFUlQgSU5UTyByZWNvbW1lbmRlZF9zdWJqZWN0c190YmwgKHN0dWRlbnRfaWQsc3ViamVjdF9pZCx5ZWFyX2lkLHNlbWVzdGVyX2lkLCBwcmVfc3ViamVjdF9pZCkgVkFMVUVTICAoJyRzdHVkZW50X2lkJywnJHN1YmplY3RfaWQnLCckeWVhcl9pZCcsJyRzZW1lc3Rlcl9pZCcsICckcHJlX3N1YmplY3RfaWQnKSAiKTsNCiAgICBlY2hvICINCiAgPHNjcmlwdD4gIA0KICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCANCiAgICBmdW5jdGlvbigpew0KICAgICAgJCgnI21vZGFsLWNyZWF0ZS1yZWNvbW1lbmRhdGlvbicpLm1vZGFsKCdzaG93Jyk7DQogICAgfSk7DQogIDwvc2NyaXB0PiI7DQogICAgZWNobyBtZXNzYWdlX3N1Y2Nlc3MoIkNyZWF0ZWQgU3VjY2Vzc2Z1bGx5ISIpOw0KICB9DQp9DQppZiAoaXNzZXQoJF9QT1NUWydjcmVhdGUnXSkpIHsNCiAgZXh0cmFjdChhcnJheV9tYXAoJ2FkZHNsYXNoZXMnLCAkX1BPU1QpKTsNCiAgJGNoZWNrX2V4aXN0cyA9IGdldF9vbmUoIlNFTEVDVCBpZihtYXgoc3R1ZGVudF9zdWJqZWN0X2lkKSBpcyBudWxsLCAwLCBtYXgoc3R1ZGVudF9zdWJqZWN0X2lkKSArIDEpIGFzIGByZXNgIGZyb20gc3R1ZGVudF9zdWJqZWN0c190YmwgIHdoZXJlICAgc3R1ZGVudF9pZCA9ICckc3R1ZGVudF9pZCcgYW5kICBzdWJqZWN0X2lkID0gJyRzdWJqZWN0X2lkJyBhbmQgIHllYXJfaWQgPSAnJHllYXJfaWQnICBhbmQgIHNlbWVzdGVyX2lkID0gJyRzZW1lc3Rlcl9pZCcgIGxpbWl0IDEiKTsNCg0KICBpZiAoIWVtcHR5KCRjaGVja19leGlzdHMtPnJlcykpIHsNCiAgICBlY2hvIG1lc3NhZ2VfZXJyb3IoIlJlY29yZCBBbHJlYWR5IEV4aXN0cyEiKTsNCiAgfSBlbHNlIHsNCiAgICBxdWVyeSgiSU5TRVJUIElOVE8gc3R1ZGVudF9zdWJqZWN0c190YmwgKHN0dWRlbnRfaWQsc3ViamVjdF9pZCx5ZWFyX2lkLHNlbWVzdGVyX2lkLCBwcmVfc3ViamVjdF9pZCkgVkFMVUVTICAoJyRzdHVkZW50X2lkJywnJHN1YmplY3RfaWQnLCckeWVhcl9pZCcsJyRzZW1lc3Rlcl9pZCcsICckcHJlX3N1YmplY3RfaWQnKSAiKTsNCiAgICBlY2hvICINCiAgPHNjcmlwdD4gIA0KICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCANCiAgICBmdW5jdGlvbigpew0KICAgICAgLy8gJCgnI21vZGFsLWNyZWF0ZScpLm1vZGFsKCdzaG93Jyk7DQogICAgfSk7DQogIDwvc2NyaXB0PiI7DQogICAgZWNobyBtZXNzYWdlX3N1Y2Nlc3MoIkNyZWF0ZWQgU3VjY2Vzc2Z1bGx5ISIpOw0KICB9DQp9DQoNCmlmIChpc3NldCgkX1BPU1RbJ2VkaXQnXSkpIHsNCiAgZXh0cmFjdChhcnJheV9tYXAoJ2FkZHNsYXNoZXMnLCAkX1BPU1QpKTsNCiAgJGNoZWNrX2V4aXN0cyA9IGdldF9vbmUoIlNFTEVDVCBpZihtYXgoc3R1ZGVudF9zdWJqZWN0X2lkKSBpcyBudWxsLCAwLCBtYXgoc3R1ZGVudF9zdWJqZWN0X2lkKSArIDEpIGFzIGByZXNgIGZyb20gc3R1ZGVudF9zdWJqZWN0c190YmwgIHdoZXJlIChzdHVkZW50X2lkID0gJyRzdHVkZW50X2lkJyBhbmQgIHN1YmplY3RfaWQgPSAnJHN1YmplY3RfaWQnIGFuZCAgeWVhcl9pZCA9ICckeWVhcl9pZCcgIGFuZCAgc2VtZXN0ZXJfaWQgPSAnJHNlbWVzdGVyX2lkJyApIGFuZCBzdHVkZW50X3N1YmplY3RfaWQgPD4gJGlkIGxpbWl0IDEiKTsNCg0KICBpZiAoIWVtcHR5KCRjaGVja19leGlzdHMtPnJlcykpIHsNCiAgICBlY2hvIG1lc3NhZ2VfZXJyb3IoIlJlY29yZCBBbHJlYWR5IEluLXVzZSEiKTsNCiAgfSBlbHNlIHsNCiAgICBxdWVyeSgiVVBEQVRFIHN0dWRlbnRfc3ViamVjdHNfdGJsIHNldCAgc3ViamVjdF9pZCA9JyRzdWJqZWN0X2lkJyx5ZWFyX2lkID0nJHllYXJfaWQnLGBzZW1lc3Rlcl9pZGAgPSckc2VtZXN0ZXJfaWQnLCBgcHJlX3N1YmplY3RfaWRgID0gJyRwcmVfc3ViamVjdF9pZCcgIHdoZXJlIHN0dWRlbnRfc3ViamVjdF9pZCA9ICckaWQnICIpOw0KICAgIGVjaG8gbWVzc2FnZV9zdWNjZXNzKCJVcGRhdGVkIFN1Y2Nlc3NmdWxseSEiKTsNCiAgfQ0KfQ0KDQppZiAoaXNzZXQoJF9QT1NUWydlZGl0X3JlY29tbWVuZGF0aW9uJ10pKSB7DQogIGV4dHJhY3QoYXJyYXlfbWFwKCdhZGRzbGFzaGVzJywgJF9QT1NUKSk7DQogICRjaGVja19leGlzdHMgPSBnZXRfb25lKCJTRUxFQ1QgaWYobWF4KHJlY29tbWVuZGVkX3N1YmplY3RfaWQpIGlzIG51bGwsIDAsIG1heChyZWNvbW1lbmRlZF9zdWJqZWN0X2lkKSArIDEpIGFzIGByZXNgIGZyb20gcmVjb21tZW5kZWRfc3ViamVjdHNfdGJsICB3aGVyZSAoc3R1ZGVudF9pZCA9ICckc3R1ZGVudF9pZCcgYW5kICBzdWJqZWN0X2lkID0gJyRzdWJqZWN0X2lkJyBhbmQgIHllYXJfaWQgPSAnJHllYXJfaWQnICBhbmQgIHNlbWVzdGVyX2lkID0gJyRzZW1lc3Rlcl9pZCcgKSBhbmQgc3R1ZGVudF9pZCA8PiAkc3R1ZGVudF9pZCBsaW1pdCAxIik7DQoNCiAgaWYgKCFlbXB0eSgkY2hlY2tfZXhpc3RzLT5yZXMpKSB7DQogICAgZWNobyBtZXNzYWdlX2Vycm9yKCJSZWNvcmQgQWxyZWFkeSBJbi11c2UhIik7DQogIH0gZWxzZSB7DQogICAgcXVlcnkoIlVQREFURSByZWNvbW1lbmRlZF9zdWJqZWN0c190Ymwgc2V0ICBzdWJqZWN0X2lkID0nJHN1YmplY3RfaWQnLHllYXJfaWQgPSckeWVhcl9pZCcsYHNlbWVzdGVyX2lkYCA9JyRzZW1lc3Rlcl9pZCcsIGBwcmVfc3ViamVjdF9pZGAgPSAnJHByZV9zdWJqZWN0X2lkJyAgd2hlcmUgcmVjb21tZW5kZWRfc3ViamVjdF9pZCA9ICckaWQnICIpOw0KICAgIGVjaG8gbWVzc2FnZV9zdWNjZXNzKCJVcGRhdGVkIFN1Y2Nlc3NmdWxseSEiKTsNCiAgfQ0KfQ0KJHN0dWRlbnRfZGF0YSA9IGdldF9vbmUoIlNFTEVDVCAqIGZyb20gc3R1ZGVudF90YmwgcyBpbm5lciBqb2luIHllYXJfbGV2ZWxzX3RibCB5IG9uIHkueWVhcl9pZCA9IHMueWVhcl9pZCBpbm5lciBqb2luIHNlbWVzdGVyX3RibCBzcyBvbiBzcy5zZW1lc3Rlcl9pZCA9IHMuc2VtZXN0ZXJfaWQgd2hlcmUgcy5zdHVkZW50X2lkID0gIiAuICRfR0VUWydpZCddKTsNCiRkYXRhID0gZ2V0X29uZSgiU0VMRUNUIHAuKixzLiosYy4qIGZyb20gY3VycmljdWx1bV90YmwgYyBpbm5lciBqb2luIHByb2dyYW1fdGJsIHAgb24gcC5wcm9ncmFtX2lkID0gYy5wcm9ncmFtX2lkIGlubmVyIGpvaW4gY3VycmljdWx1bV9zZW1lc3Rlcl90YmwgcyBvbiBzLmN1cnJpY3VsdW1fc2VtZXN0ZXJfaWQgPSBjLmN1cnJpY3VsdW1fc2VtZXN0ZXJfaWQgd2hlcmUgYy5jdXJyaWN1bHVtX2lkID0gIiAuICRzdHVkZW50X2RhdGEtPmN1cnJpY3VsdW1faWQpOw0KJHN0dWRlbnRfdW5pdHMgPSBnZXRfb25lKCJTRUxFQ1Qgc3VtKHN1YmplY3RfdW5pdCkgYXMgdG90YWxfdW5pdHMgRlJPTSBjdXJyaWN1bHVtX3N1YmplY3RzX3RibCAgY3MgaW5uZXIgam9pbiBzdWJqZWN0X3RibCBzIG9uIHMuc3ViamVjdF9pZCA9IGNzLnN1YmplY3RfaWQgd2hlcmUgY3MueWVhcl9pZCA9ICIgLiAkc3R1ZGVudF9kYXRhLT55ZWFyX2lkIC4gIiBhbmQgY3Muc2VtZXN0ZXJfaWQgPSAiIC4gJHN0dWRlbnRfZGF0YS0+c2VtZXN0ZXJfaWQgLiAiIGFuZCAgY3MuY3VycmljdWx1bV9pZCA9ICIgLiAkc3R1ZGVudF9kYXRhLT5jdXJyaWN1bHVtX2lkKS0+dG90YWxfdW5pdHM7DQokcGFzc2VkX3N1YmplY3RzID0gIGdldF9vbmUoIlNFTEVDVCBpZm51bGwoZ3JvdXBfY29uY2F0KHMuc3ViamVjdF9pZCksMCkgYXMgaWRzIGZyb20gc3R1ZGVudF9zdWJqZWN0c190YmwgcyB3aGVyZSBzLmdyYWRlX2lkIG5vdCBpbiAoMSwgMTEsIDEyLCAxMywgMTQsIDE1KSBhbmQgcy5zdHVkZW50X2lkID0gIiAuICRzdHVkZW50X2RhdGEtPnN0dWRlbnRfaWQpLT5pZHM7DQokY3VycmljdWx1bV9zdWJqZWN0cyA9ICBnZXRfb25lKCJTRUxFQ1QgaWZudWxsKGdyb3VwX2NvbmNhdChzLnN1YmplY3RfaWQpLDApIGFzIGlkcyBmcm9tIGN1cnJpY3VsdW1fc3ViamVjdHNfdGJsIHMgd2hlcmUgcy55ZWFyX2lkID0gJyIgLiAkc3R1ZGVudF9kYXRhLT55ZWFyX2lkIC4gIicgYW5kIHMuc2VtZXN0ZXJfaWQgPSAnIiAuICRzdHVkZW50X2RhdGEtPnllYXJfaWQgLiAiJyIpLT5pZHM7DQokcmVjb21tZW5kZWRfc3ViamVjdHMgPSAgZ2V0X29uZSgiU0VMRUNUIGlmbnVsbChncm91cF9jb25jYXQocy5zdWJqZWN0X2lkKSwwKSBhcyBpZHMgZnJvbSByZWNvbW1lbmRlZF9zdWJqZWN0c190YmwgcyB3aGVyZSBzLnN0dWRlbnRfaWQgPSAnIiAuICRzdHVkZW50X2RhdGEtPnN0dWRlbnRfaWQgLiAiJyBhbmQgIHMueWVhcl9pZCA9ICciIC4gJHN0dWRlbnRfZGF0YS0+eWVhcl9pZCAuICInIGFuZCBzLnNlbWVzdGVyX2lkID0gJyIgLiAkc3R1ZGVudF9kYXRhLT55ZWFyX2lkIC4gIiciKS0+aWRzOw0KDQo/Pg0KPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi8uLi9ldmFsdWF0aW9uLmNzcyI+DQoNCjxkaXYgY2xhc3M9InN0dWRlbnQtaW5mbyI+DQogIDxmb3JtIG1ldGhvZD0icG9zdCI+DQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3R1ZGVudF9pZCIgdmFsdWU9Ijw/PSAkc3R1ZGVudF9kYXRhLT5zdHVkZW50X2lkID8+Ij4NCg0KICAgIDxkaXYgaWQ9Im1haW4tY29udGVudCI+DQogICAgICA8IS0tIFN0dWRlbnQgTnVtYmVyIFJvdyAtLT4NCiAgICAgIDxkaXYgY2xhc3M9ImZvcm0tcm93Ij4NCiAgICAgICAgPCEtLSBOYW1lIC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4NCiAgICAgICAgICA8bGFiZWwgZm9yPSJzdHVkZW50LW5hbWUiPk5hbWU6PC9sYWJlbD4NCiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9InN0dWRlbnQtbmFtZSIgcmVhZG9ubHkgdmFsdWU9Ijw/PSAkc3R1ZGVudF9kYXRhLT5zdHVkZW50X2ZpcnN0bmFtZSAuICIgIiAuICRzdHVkZW50X2RhdGEtPnN0dWRlbnRfbWlkZGxlbmFtZSAuICIgIiAuICRzdHVkZW50X2RhdGEtPnN0dWRlbnRfbGFzdG5hbWUgPz4iIGRpc2FibGVkPg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2Pg0KDQogICAgICA8IS0tIE5hbWUgYW5kIENvdXJzZSBSb3cgLS0+DQogICAgICA8ZGl2IGNsYXNzPSJmb3JtLXJvdyI+DQogICAgICAgIDwhLS0gU3R1ZGVudCBOdW1iZXIgLS0+DQogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgIDxsYWJlbCBmb3I9InN0dWRlbnQtbm8iPlN0dWRlbnQgTnVtYmVyOjwvbGFiZWw+DQogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJzdHVkZW50LW5vIiByZWFkb25seSB2YWx1ZT0iPD89ICRzdHVkZW50X2RhdGEtPnN0dWRlbnRfaWQgID8+IiBkaXNhYmxlZD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDwhLS0gQ291cnNlIC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4NCiAgICAgICAgICA8bGFiZWwgZm9yPSJjb3Vyc2UiPkNvdXJzZTo8L2xhYmVsPg0KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iY291cnNlIiByZWFkb25seSB2YWx1ZT0iPD89ICRkYXRhLT5wcm9ncmFtX3RpdGxlID8+IiBkaXNhYmxlZD4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2Rpdj4NCg0KICAgICAgPCEtLSBZZWFyLCBTZW1lc3RlciwgYW5kIFNjaG9vbCBZZWFyIFJvdyAtLT4NCiAgICAgIDxkaXYgY2xhc3M9ImZvcm0tcm93Ij4NCiAgICAgICAgPCEtLSBZZWFyIC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4NCiAgICAgICAgICA8bGFiZWwgZm9yPSJ5ZWFyIj5ZZWFyOjwvbGFiZWw+DQogICAgICAgICAgPHNlbGVjdCBuYW1lPSJ5ZWFyX2lkIiBpZD0ieWVhcl9pZCIgY2xhc3M9IiI+DQoNCiAgICAgICAgICAgIDw/cGhwIGZvcmVhY2ggKGdldF9saXN0KCJTRUxFQ1QgKiBmcm9tIHllYXJfbGV2ZWxzX3RibCAgd2hlcmUgZGVsZXRlZF9mbGFnID0gMCIpIGFzICRyb3cpIHsgPz4NCiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iPD89ICRyb3dbJ3llYXJfaWQnXSA/PiIgPD89ICRyb3dbJ3llYXJfaWQnXSA9PSAkc3R1ZGVudF9kYXRhLT55ZWFyX2lkID8gInNlbGVjdGVkIiA6ICIiID8+Pjw/PSAkcm93Wyd5ZWFyX25hbWUnXSA/PiA8L29wdGlvbj4NCiAgICAgICAgICAgIDw/cGhwIH0gPz4NCiAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDwhLS0gU2VtZXN0ZXIgLS0+DQogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgIDxsYWJlbCBmb3I9InNlbWVzdGVyIj5TZW1lc3Rlcjo8L2xhYmVsPg0KDQogICAgICAgICAgPHNlbGVjdCBuYW1lPSJzZW1lc3Rlcl9pZCIgaWQ9InNlbWVzdGVyX2lkIiBjbGFzcz0iIj4NCg0KICAgICAgICAgICAgPD9waHAgZm9yZWFjaCAoZ2V0X2xpc3QoIlNFTEVDVCAqIGZyb20gc2VtZXN0ZXJfdGJsICB3aGVyZSBkZWxldGVkX2ZsYWcgPSAwIikgYXMgJHJvdykgeyA/Pg0KICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI8Pz0gJHJvd1snc2VtZXN0ZXJfaWQnXSA/PiIgPD89ICRyb3dbJ3NlbWVzdGVyX2lkJ10gPT0gJHN0dWRlbnRfZGF0YS0+c2VtZXN0ZXJfaWQgPyAic2VsZWN0ZWQiIDogIiIgPz4+PD89ICRyb3dbJ3NlbWVzdGVyX25hbWUnXSA/PiA8L29wdGlvbj4NCiAgICAgICAgICAgIDw/cGhwIH0gPz4NCiAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDwhLS0gU2Nob29sIFllYXIgLS0+DQogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgIDxsYWJlbCBmb3I9InNjaG9vbC15ZWFyIj5TY2hvb2wgWWVhcjo8L2xhYmVsPg0KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ic2Nob29sLXllYXIiIHJlYWRvbmx5IHZhbHVlPSJTLlkuIDw/PSAkZGF0YS0+Y3VycmljdWx1bV9zZW1lc3Rlcl95ZWFyX2Zyb20gLiAiIC0gIiAuICRkYXRhLT5jdXJyaWN1bHVtX3NlbWVzdGVyX3llYXJfdG8gPz4iIGRpc2FibGVkPg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBjbGFzcz0iZm9ybS1yb3ciPg0KICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIG5hbWU9ImNoYW5nZV95ZWFyIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbSBidG4tZmxhdCI+VXBkYXRlPC9idXR0b24+DQogICAgPC9kaXY+DQogIDwvZm9ybT4NCjwvZGl2Pg0KDQo8IS0tIExvYWQgU3ViamVjdHMgQnV0dG9uIC0tPg0KPGRpdiBjbGFzcz0iYnV0dG9uLWNvbnRhaW5lciI+DQogIDxmb3JtIG1ldGhvZD0iZ2V0Ij4NCg0KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImlkIiB2YWx1ZT0iPD89ICRfR0VUWydpZCddID8+Ij4NCiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJsb2FkX3N1YmplY3RzIiB2YWx1ZT0iMSI+DQogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIiB0eXBlPSJzdWJtaXQiPkxvYWQgU3ViamVjdHM8L2J1dHRvbj4NCiAgPC9mb3JtPg0KPC9kaXY+DQoNCg0KPGRpdiBjbGFzcz0ibWFpbi1jb250ZW50Ij4NCg0KICA8P3BocCBpZiAoaXNzZXQoJF9HRVRbJ2xvYWRfc3ViamVjdHMnXSkpIHsgPz4NCiAgICA8ZGl2IGlkPSJwcmludFRhYmxlIj4NCiAgICAgIDx0YWJsZSBjbGFzcz0ic3ViamVjdHMtdGFibGUiPg0KICAgICAgICA8dGhlYWQ+DQogICAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRoPkNvdXJzZSBDb2RlPC90aD4NCiAgICAgICAgICAgIDx0aD5Db3Vyc2UgVGl0bGU8L3RoPg0KICAgICAgICAgICAgPHRoPlVuaXRzPC90aD4NCiAgICAgICAgICAgIDx0aD5DbGFzcyBUeXBlPC90aD4NCiAgICAgICAgICAgIDx0aD5QcmUtcmVxdWlzaXRlPC90aD4NCiAgICAgICAgICAgIDx0aD5BY3Rpb25zPC90aD4NCiAgICAgICAgICA8L3RyPg0KICAgICAgICA8L3RoZWFkPg0KICAgICAgICA8dGJvZHk+DQogICAgICAgICAgPD9waHANCiAgICAgICAgICAkdW5pdF9jdHIgPSAwOw0KICAgICAgICAgICRjdHIgPSAwOw0KICAgICAgICAgICRzdWJqZWN0cyA9IFtdOw0KICAgICAgICAgICRwcmVzdWJqZWN0cyA9IFtdOw0KICAgICAgICAgID8+DQogICAgICAgICAgPD9waHAgaWYgKCEkc3R1ZGVudF9kYXRhLT5jb25maXJtZWQpIHsgPz4NCiAgICAgICAgICAgIDw/cGhwIGZvcmVhY2ggKA0KICAgICAgICAgICAgICBnZXRfbGlzdCgNCiAgICAgICAgICAgICAgICAiU0VMRUNUIA0KICAgICAgICAgICAgICAgICAgeS55ZWFyX2lkLHNlLnNlbWVzdGVyX2lkLHllYXJfbmFtZSxzZS5zZW1lc3Rlcl9uYW1lLGNzLnByZV9zdWJqZWN0X2lkLHMuKixzMi5zdWJqZWN0X3RpdGxlIGFzIHByZV9zdWJqZWN0X3RpdGxlLHMyLnN1YmplY3RfY29kZSBhcyBwcmVfc3ViamVjdF9jb2RlLGN0LiogRlJPTSBjdXJyaWN1bHVtX3N1YmplY3RzX3RibCBjcyANCiAgICAgICAgICAgICAgaW5uZXIgam9pbiBzdWJqZWN0X3RibCBzIG9uIHMuc3ViamVjdF9pZCA9IGNzLnN1YmplY3RfaWQgDQogICAgICAgICAgICAgIGxlZnQgam9pbiBzdWJqZWN0X3RibCBzMiBvbiBzMi5zdWJqZWN0X2lkID0gY3MucHJlX3N1YmplY3RfaWQNCiAgICAgICAgICAgICAgaW5uZXIgam9pbiB5ZWFyX2xldmVsc190YmwgeSBvbiB5LnllYXJfaWQgPSBjcy55ZWFyX2lkIA0KICAgICAgICAgICAgICBpbm5lciBqb2luIHNlbWVzdGVyX3RibCBzZSBvbiBzZS5zZW1lc3Rlcl9pZCA9IGNzLnNlbWVzdGVyX2lkIA0KICAgICAgICAgICAgICBpbm5lciBqb2luIGNsYXNzX3R5cGVfdGJsIGN0IG9uIGN0LmNsYXNzX3R5cGVfaWQgPSBzLmNsYXNzX3R5cGVfaWQNCg0KICAgICAgICAgICAgICB3aGVyZSBjcy5jdXJyaWN1bHVtX2lkID0gIiAuICRzdHVkZW50X2RhdGEtPmN1cnJpY3VsdW1faWQgLiAiIGFuZCBjcy5zZW1lc3Rlcl9pZCA9ICIgLiAkc3R1ZGVudF9kYXRhLT5zZW1lc3Rlcl9pZCAuICIgYW5kIGNzLnllYXJfaWQgPSAiIC4gJHN0dWRlbnRfZGF0YS0+eWVhcl9pZCAuICIgDQogICAgICAgICAgICAgIGFuZCAoY3MucHJlX3N1YmplY3RfaWQgaW4gKFNFTEVDVCBzeS5zdWJqZWN0X2lkIGZyb20gc3R1ZGVudF9zdWJqZWN0c190Ymwgc3kgd2hlcmUgc3kuZ3JhZGVfaWQgbm90IGluICgxLCAxMSwgMTIsIDEzLCAxNCwgMTUpIGFuZCBzeS5zdHVkZW50X2lkID0gIiAuICRzdHVkZW50X2RhdGEtPnN0dWRlbnRfaWQgLiAiKSBvciBjcy5wcmVfc3ViamVjdF9pZCA9IDApDQogICAgICAgICAgICAgICBvcmRlciBieSBjcy55ZWFyX2lkLGNzLnNlbWVzdGVyX2lkIg0KICAgICAgICAgICAgICApIGFzICRyb3cyDQogICAgICAgICAgICApIHsgPz4NCiAgICAgICAgICAgICAgPHRyPg0KDQogICAgICAgICAgICAgICAgPHRkPjw/PSAkcm93Mlsnc3ViamVjdF9jb2RlJ10gPz48L3RkPg0KICAgICAgICAgICAgICAgIDx0ZD48Pz0gJHJvdzJbJ3N1YmplY3RfdGl0bGUnXSA/PjwvdGQ+DQogICAgICAgICAgICAgICAgPHRkPjw/PSAkcm93Mlsnc3ViamVjdF91bml0J10gPz48L3RkPg0KICAgICAgICAgICAgICAgIDx0ZD48Pz0gJHJvdzJbJ2NsYXNzX3R5cGVfbmFtZSddICA/PjwvdGQ+DQogICAgICAgICAgICAgICAgPHRkPjw/PSAhZW1wdHkoJHJvdzJbJ3ByZV9zdWJqZWN0X2NvZGUnXSkgPyAkcm93MlsncHJlX3N1YmplY3RfY29kZSddIC4gIiAoIiAuICRyb3cyWydwcmVfc3ViamVjdF90aXRsZSddIC4gIikiIDogIk5PTkUiID8+PC90ZD4NCiAgICAgICAgICAgICAgICA8dGQ+IDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgIDw/cGhwDQogICAgICAgICAgICAgICRjdHIgKz0gJHJvdzJbJ3N1YmplY3RfdW5pdCddOw0KICAgICAgICAgICAgICAkc3ViamVjdHNbXSA9ICRyb3cyWydzdWJqZWN0X2lkJ107DQogICAgICAgICAgICAgICRwcmVzdWJqZWN0c1tdID0gJHJvdzJbJ3ByZV9zdWJqZWN0X2lkJ107DQogICAgICAgICAgICAgICR1bml0X2N0ciArPSAkcm93Mlsnc3ViamVjdF91bml0J10gPz4NCiAgICAgICAgICAgIDw/cGhwIH0gID8+DQogICAgICAgICAgPD9waHAgfSBlbHNlIHsgPz4NCiAgICAgICAgICAgIDw/cGhwIGZvcmVhY2ggKA0KICAgICAgICAgICAgICBnZXRfbGlzdCgNCiAgICAgICAgICAgICAgICAiU0VMRUNUIA0KICAgICAgICAgICAgICAgICAgY3MucmVjb21tZW5kZWRfc3ViamVjdF9pZCx5LnllYXJfaWQsc2Uuc2VtZXN0ZXJfaWQseWVhcl9uYW1lLHNlLnNlbWVzdGVyX25hbWUsY3MucHJlX3N1YmplY3RfaWQscy4qLGNzLnN1YmplY3RfaWQsczIuc3ViamVjdF90aXRsZSBhcyBwcmVfc3ViamVjdF90aXRsZSxzMi5zdWJqZWN0X2NvZGUgYXMgcHJlX3N1YmplY3RfY29kZSxjdC4qIEZST00gcmVjb21tZW5kZWRfc3ViamVjdHNfdGJsIGNzIA0KICAgICAgICAgICAgICBpbm5lciBqb2luIHN1YmplY3RfdGJsIHMgb24gcy5zdWJqZWN0X2lkID0gY3Muc3ViamVjdF9pZCANCiAgICAgICAgICAgICAgbGVmdCBqb2luIHN1YmplY3RfdGJsIHMyIG9uIHMyLnN1YmplY3RfaWQgPSBjcy5wcmVfc3ViamVjdF9pZA0KICAgICAgICAgICAgICBpbm5lciBqb2luIHllYXJfbGV2ZWxzX3RibCB5IG9uIHkueWVhcl9pZCA9IGNzLnllYXJfaWQgDQogICAgICAgICAgICAgIGlubmVyIGpvaW4gc2VtZXN0ZXJfdGJsIHNlIG9uIHNlLnNlbWVzdGVyX2lkID0gY3Muc2VtZXN0ZXJfaWQgDQogICAgICAgICAgICAgIGlubmVyIGpvaW4gY2xhc3NfdHlwZV90YmwgY3Qgb24gY3QuY2xhc3NfdHlwZV9pZCA9IHMuY2xhc3NfdHlwZV9pZA0KICAgICAgICAgICAgICB3aGVyZSBjcy5zdHVkZW50X2lkID0gIiAuICRzdHVkZW50X2RhdGEtPnN0dWRlbnRfaWQgLiAiIG9yZGVyIGJ5IGNzLnllYXJfaWQsY3Muc2VtZXN0ZXJfaWQiDQogICAgICAgICAgICAgICkgYXMgJHJvdzINCiAgICAgICAgICAgICkgeyA/Pg0KICAgICAgICAgICAgICA8dHI+DQoNCiAgICAgICAgICAgICAgICA8dGQ+PD89ICRyb3cyWydzdWJqZWN0X2NvZGUnXSA/PjwvdGQ+DQogICAgICAgICAgICAgICAgPHRkPjw/PSAkcm93Mlsnc3ViamVjdF90aXRsZSddID8+PC90ZD4NCiAgICAgICAgICAgICAgICA8dGQ+PD89ICRyb3cyWydzdWJqZWN0X3VuaXQnXSA/PjwvdGQ+DQogICAgICAgICAgICAgICAgPHRkPjw/PSAkcm93MlsnY2xhc3NfdHlwZV9uYW1lJ10gID8+PC90ZD4NCiAgICAgICAgICAgICAgICA8dGQ+PD89ICFlbXB0eSgkcm93MlsncHJlX3N1YmplY3RfY29kZSddKSA/ICRyb3cyWydwcmVfc3ViamVjdF9jb2RlJ10gLiAiICgiIC4gJHJvdzJbJ3ByZV9zdWJqZWN0X3RpdGxlJ10gLiAiKSIgOiAiTk9ORSIgPz48L3RkPg0KICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgIDw/cGhwIGlmIChpbl9hcnJheSgkcm93Mlsnc3ViamVjdF9pZCddLCBleHBsb2RlKCIsIiwgJGN1cnJpY3VsdW1fc3ViamVjdHMpKSkgeyA/Pg0KICAgICAgICAgICAgICAgICAgICA8Zm9ybSBtZXRob2Q9InBvc3QiPg0KICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN1YmplY3RfaWQiIHZhbHVlPSI8Pz0gJHJvdzJbJ3N1YmplY3RfaWQnXSA/PiI+DQogICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3R1ZGVudF9pZCIgdmFsdWU9Ijw/PSAkc3R1ZGVudF9kYXRhLT5zdHVkZW50X2lkID8+Ij4NCiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgbmFtZT0iZGVsZXRlX3N1YmplY3QiIGNsYXNzPSJidG4gYnRuLWZsYXQgYnRuLXNtIGJ0bi1kYW5nZXIiIHZhbHVlPSI8Pz0gJHJvdzJbJ3JlY29tbWVuZGVkX3N1YmplY3RfaWQnXSA/PiI+PGkgY2xhc3M9ImZhIGZhLXRyYXNoIj48L2k+PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4NCiAgICAgICAgICAgICAgICAgIDw/cGhwIH0gPz4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8P3BocA0KICAgICAgICAgICAgICAkY3RyICs9ICRyb3cyWydzdWJqZWN0X3VuaXQnXTsNCiAgICAgICAgICAgICAgJHN1YmplY3RzW10gPSAkcm93Mlsnc3ViamVjdF9pZCddOw0KICAgICAgICAgICAgICAkcHJlc3ViamVjdHNbXSA9ICRyb3cyWydwcmVfc3ViamVjdF9pZCddOw0KICAgICAgICAgICAgICAkdW5pdF9jdHIgKz0gJHJvdzJbJ3N1YmplY3RfdW5pdCddID8+DQogICAgICAgICAgICA8P3BocCB9ICA/Pg0KICAgICAgICAgIDw/cGhwIH0gID8+DQoNCiAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPHRmb290Pg0KICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSIyIiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7IGZvbnQtd2VpZ2h0OiBib2xkOyI+VG90YWwgVW5pdHM6PC90ZD4NCiAgICAgICAgICAgIDx0ZCBpZD0idG90YWwtdW5pdHMiIHN0eWxlPT48Pz0gJGN0ciA/PjwvdGQ+DQogICAgICAgICAgICA8dGQgY29sc3Bhbj0iMyI+PC90ZD4NCiAgICAgICAgICA8L3RyPg0KICAgICAgICA8L3Rmb290Pg0KICAgICAgPC90YWJsZT4NCiAgICA8L2Rpdj4NCiAgICA8IS0tIFNhdmUgU3ViamVjdHMgQnV0dG9uIC0tPg0KDQoNCiAgPD9waHAgfSA/Pg0KDQogIDw/cGhwIGlmIChpc3NldCgkX0dFVFsnbG9hZF9zdWJqZWN0cyddKSkgeyA/Pg0KICAgIDx0YWJsZSBjbGFzcz0icmVjb21tZW5kYXRpb24tdGFibGUiPg0KICAgICAgPGgyPlJlY29tbWVuZGF0aW9uPC9oMj4NCiAgICAgIDx0aGVhZD4NCiAgICAgICAgPHRyPg0KICAgICAgICAgIDx0aD5Db3Vyc2UgQ29kZTwvdGg+DQogICAgICAgICAgPHRoPkNvdXJzZSBUaXRsZTwvdGg+DQogICAgICAgICAgPHRoPlVuaXRzPC90aD4NCiAgICAgICAgICA8dGg+Q2xhc3MgVHlwZTwvdGg+DQogICAgICAgICAgPHRoPlByZS1yZXF1aXNpdGU8L3RoPg0KICAgICAgICAgIDx0aD5BY3Rpb25zPC90aD4NCiAgICAgICAgPC90cj4NCiAgICAgIDwvdGhlYWQ+DQogICAgICA8dGJvZHk+DQogICAgICAgIDw/cGhwIGZvcmVhY2ggKA0KICAgICAgICAgIGdldF9saXN0KA0KICAgICAgICAgICAgIlNFTEVDVCANCiAgICAgICAgICAgICAgeS55ZWFyX2lkLHNlLnNlbWVzdGVyX2lkLHllYXJfbmFtZSxzZS5zZW1lc3Rlcl9uYW1lLGNzLnByZV9zdWJqZWN0X2lkLHMuKixzMi5zdWJqZWN0X3RpdGxlIGFzIHByZV9zdWJqZWN0X3RpdGxlLHMyLnN1YmplY3RfY29kZSBhcyBwcmVfc3ViamVjdF9jb2RlLGN0LiogRlJPTSBjdXJyaWN1bHVtX3N1YmplY3RzX3RibCBjcyANCiAgICAgICAgICAgICAgaW5uZXIgam9pbiBzdWJqZWN0X3RibCBzIG9uIHMuc3ViamVjdF9pZCA9IGNzLnN1YmplY3RfaWQgDQogICAgICAgICAgICAgIGxlZnQgam9pbiBzdWJqZWN0X3RibCBzMiBvbiBzMi5zdWJqZWN0X2lkID0gY3MucHJlX3N1YmplY3RfaWQNCiAgICAgICAgICAgICAgaW5uZXIgam9pbiB5ZWFyX2xldmVsc190YmwgeSBvbiB5LnllYXJfaWQgPSBjcy55ZWFyX2lkIA0KICAgICAgICAgICAgICBpbm5lciBqb2luIHNlbWVzdGVyX3RibCBzZSBvbiBzZS5zZW1lc3Rlcl9pZCA9IGNzLnNlbWVzdGVyX2lkIA0KICAgICAgICAgICAgICBpbm5lciBqb2luIGNsYXNzX3R5cGVfdGJsIGN0IG9uIGN0LmNsYXNzX3R5cGVfaWQgPSBzLmNsYXNzX3R5cGVfaWQNCiAgICAgICAgICAgICAgbGVmdCBqb2luIHN0dWRlbnRfc3ViamVjdHNfdGJsIHN0ZCBvbiBjcy5wcmVfc3ViamVjdF9pZCA9IHN0ZC5zdWJqZWN0X2lkIGFuZCBzdGQuc3R1ZGVudF9pZCA9ICIgLiAkc3R1ZGVudF9kYXRhLT5zdHVkZW50X2lkIC4gIg0KICAgICAgICAgICAgICB3aGVyZSBjcy5jdXJyaWN1bHVtX2lkID0gIiAuICRzdHVkZW50X2RhdGEtPmN1cnJpY3VsdW1faWQgLiAiIGFuZCBjcy5zZW1lc3Rlcl9pZCA9ICIgLiAkc3R1ZGVudF9kYXRhLT5zZW1lc3Rlcl9pZCAuICIgYW5kIGNzLnllYXJfaWQgPD0gIiAuICgkc3R1ZGVudF9kYXRhLT55ZWFyX2lkICsgMSkgLg0KICAgICAgICAgICAgICAiIA0KICAgICAgICAgICAgICBhbmQgKGNzLnByZV9zdWJqZWN0X2lkIGluIChTRUxFQ1Qgc3kuc3ViamVjdF9pZCBmcm9tIHN0dWRlbnRfc3ViamVjdHNfdGJsIHN5IHdoZXJlIHN5LmdyYWRlX2lkIG5vdCBpbiAoMSwgMTEsIDEyLCAxMywgMTQsIDE1KSBhbmQgc3kuc3R1ZGVudF9pZCA9ICIgLiAkc3R1ZGVudF9kYXRhLT5zdHVkZW50X2lkIC4gIikgb3IgY3MucHJlX3N1YmplY3RfaWQgPSAwKQ0KICAgICAgICAgICAgICBvcmRlciBieSBjcy55ZWFyX2lkLGNzLnNlbWVzdGVyX2lkIg0KICAgICAgICAgICAgLy8gIlNFTEVDVCBzMi5zdWJqZWN0X2NvZGUgYXMgcHJlX3N1YmplY3RfY29kZSxzMi5zdWJqZWN0X3RpdGxlIGFzIHByZV9zdWJqZWN0X3RpdGxlLHMuKixjdC4qLGNkLiogZnJvbSBzdHVkZW50X3N1YmplY3RzX3RibCBjZCAgbGVmdCBqb2luIHN1YmplY3RfdGJsIHMyIG9uIHMyLnN1YmplY3RfaWQgPSBjZC5wcmVfc3ViamVjdF9pZCBpbm5lciBqb2luIHN1YmplY3RfdGJsIHMgb24gcy5zdWJqZWN0X2lkID0gY2Quc3ViamVjdF9pZCBpbm5lciBqb2luIHllYXJfbGV2ZWxzX3RibCB5IG9uIHkueWVhcl9pZCA9IGNkLnllYXJfaWQgaW5uZXIgam9pbiBzZW1lc3Rlcl90Ymwgc3Mgb24gc3Muc2VtZXN0ZXJfaWQgPSBjZC5zZW1lc3Rlcl9pZCBpbm5lciBqb2luIGNsYXNzX3R5cGVfdGJsIGN0IG9uIGN0LmNsYXNzX3R5cGVfaWQgPSBzLmNsYXNzX3R5cGVfaWQgd2hlcmUgY2Quc3R1ZGVudF9pZCA9ICciIC4gJF9HRVRbJ2lkJ10gLiAiJyBBTkQgeS55ZWFyX2lkIDw9ICciIC4gJHN0dWRlbnRfZGF0YS0+eWVhcl9pZCAuICInIEFORCBzcy5zZW1lc3Rlcl9pZCA8PSAnIiAuICRzdHVkZW50X2RhdGEtPnNlbWVzdGVyX2lkIC4gIicgYW5kIGNkLmdyYWRlX2lkIGluICgxMSwxMiwxMywxNCwxNSkgT1JERVIgQlkgeS55ZWFyX2lkLHNzLnNlbWVzdGVyX2lkICINCiAgICAgICAgICApIGFzICRyb3cyDQogICAgICAgICkgew0KICAgICAgICAgIC8vIGlmICgkdW5pdF9jdHIgPj0gJHN0dWRlbnRfdW5pdHMpIHsNCiAgICAgICAgICAvLyAgIGNvbnRpbnVlOw0KICAgICAgICAgIC8vIH0NCg0KICAgICAgICA/Pg0KICAgICAgICAgIDw/cGhwIGlmICghaW5fYXJyYXkoJHJvdzJbJ3N1YmplY3RfaWQnXSwgJHN1YmplY3RzKSAmJiAhaW5fYXJyYXkoJHJvdzJbJ3N1YmplY3RfaWQnXSwgZXhwbG9kZSgiLCIsICRwYXNzZWRfc3ViamVjdHMpKSkgeyA/Pg0KICAgICAgICAgICAgPHRyPg0KDQogICAgICAgICAgICAgIDx0ZD48Pz0gJHJvdzJbJ3N1YmplY3RfY29kZSddID8+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjw/PSAkcm93Mlsnc3ViamVjdF90aXRsZSddID8+PC90ZD4NCiAgICAgICAgICAgICAgPHRkPjw/PSAkcm93Mlsnc3ViamVjdF91bml0J10gPz48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PD89ICRyb3cyWydjbGFzc190eXBlX25hbWUnXSAgPz48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PD89ICFlbXB0eSgkcm93MlsncHJlX3N1YmplY3RfY29kZSddKSA/ICRyb3cyWydwcmVfc3ViamVjdF9jb2RlJ10gLiAiICgiIC4gJHJvdzJbJ3ByZV9zdWJqZWN0X3RpdGxlJ10gLiAiKSIgOiAiTk9ORSIgPz48L3RkPg0KICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgPD9waHAgaWYgKCFpbl9hcnJheSgkcm93Mlsnc3ViamVjdF9pZCddLCBleHBsb2RlKCIsIiwgJHBhc3NlZF9zdWJqZWN0cykpKSB7ID8+DQogICAgICAgICAgICAgICAgICA8Zm9ybSBtZXRob2Q9InBvc3QiPg0KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ5ZWFyX2lkIiB2YWx1ZT0iPD89ICRyb3cyWyd5ZWFyX2lkJ10gPz4iPg0KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzZW1lc3Rlcl9pZCIgdmFsdWU9Ijw/PSAkcm93Mlsnc2VtZXN0ZXJfaWQnXSA/PiI+DQogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InByZV9zdWJqZWN0X2lkIiB2YWx1ZT0iPD89ICRyb3cyWydwcmVfc3ViamVjdF9pZCddID8+Ij4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3R1ZGVudF9pZCIgdmFsdWU9Ijw/PSAkc3R1ZGVudF9kYXRhLT5zdHVkZW50X2lkID8+Ij4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3ViamVjdF91bml0IiB2YWx1ZT0iPD89ICRzdHVkZW50X2RhdGEtPnN1YmplY3RfdW5pdCA/PiI+DQogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Im1heF91bml0cyIgdmFsdWU9Ijw/PSAkc3R1ZGVudF91bml0cyA/PiI+DQogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN0ciIgdmFsdWU9Ijw/PSAkY3RyID8+Ij4NCiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIG5hbWU9ImFkZF9zdWJqZWN0IiBjbGFzcz0iYnRuIGJ0bi1mbGF0IGJ0bi1zbSBidG4tc3VjY2VzcyIgdmFsdWU9Ijw/PSAkcm93Mlsnc3ViamVjdF9pZCddID8+Ij48aSBjbGFzcz0iZmEgZmEtcGx1cyI+PC9pPjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICAgICAgICAgIDw/cGhwIH0gPz4NCiAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8P3BocA0KICAgICAgICAgICAgLy8gJHVuaXRfY3RyICs9ICRyb3cyWydzdWJqZWN0X3VuaXQnXTsNCiAgICAgICAgICAgIC8vICRzdWJqZWN0c1tdID0gJHJvdzJbJ3N1YmplY3RfaWQnXTsNCiAgICAgICAgICAgIC8vICRwcmVzdWJqZWN0c1tdID0gJHJvdzJbJ3ByZV9zdWJqZWN0X2lkJ107DQogICAgICAgICAgICA/Pg0KICAgICAgICAgIDw/cGhwIH0gID8+DQogICAgICAgIDw/cGhwIH0gID8+DQoNCiAgICAgIDwvdGJvZHk+DQogICAgPC90YWJsZT4NCiAgPD9waHAgfSA/Pg0KDQogIDw/cGhwDQogIC8qDQogICBpZiAoaXNzZXQoJF9HRVRbJ2xvYWRfc3ViamVjdHMnXSkgJiYgJHN0dWRlbnRfZGF0YS0+Y29uZmlybWVkKSB7ID8+DQogICAgPHRhYmxlIGNsYXNzPSJyZWNvbW1lbmRhdGlvbi10YWJsZSI+DQogICAgICA8aDI+UmVjb21tZW5kYXRpb248L2gyPg0KICAgICAgPHRoZWFkPg0KICAgICAgICA8dHI+DQogICAgICAgICAgPHRoPkNvdXJzZSBDb2RlPC90aD4NCiAgICAgICAgICA8dGg+Q291cnNlIFRpdGxlPC90aD4NCiAgICAgICAgICA8dGg+VW5pdHM8L3RoPg0KICAgICAgICAgIDx0aD5DbGFzcyBUeXBlPC90aD4NCiAgICAgICAgICA8dGg+UHJlLXJlcXVpc2l0ZTwvdGg+DQogICAgICAgICAgPHRoPkZlZWRiYWNrPC90aD4NCiAgICAgICAgPC90cj4NCiAgICAgIDwvdGhlYWQ+DQogICAgICA8dGJvZHk+DQogICAgICAgIDw/cGhwIGZvcmVhY2ggKGdldF9saXN0KCJTRUxFQ1QgczIuc3ViamVjdF9jb2RlIGFzIHByZV9zdWJqZWN0X2NvZGUsczIuc3ViamVjdF90aXRsZSBhcyBwcmVfc3ViamVjdF90aXRsZSxzLiosY3QuKixjZC4qIGZyb20gcmVjb21tZW5kZWRfc3ViamVjdHNfdGJsIGNkICBsZWZ0IGpvaW4gc3ViamVjdF90YmwgczIgb24gczIuc3ViamVjdF9pZCA9IGNkLnByZV9zdWJqZWN0X2lkIGlubmVyIGpvaW4gc3ViamVjdF90YmwgcyBvbiBzLnN1YmplY3RfaWQgPSBjZC5zdWJqZWN0X2lkIGlubmVyIGpvaW4geWVhcl9sZXZlbHNfdGJsIHkgb24geS55ZWFyX2lkID0gY2QueWVhcl9pZCBpbm5lciBqb2luIHNlbWVzdGVyX3RibCBzcyBvbiBzcy5zZW1lc3Rlcl9pZCA9IGNkLnNlbWVzdGVyX2lkIGlubmVyIGpvaW4gY2xhc3NfdHlwZV90YmwgY3Qgb24gY3QuY2xhc3NfdHlwZV9pZCA9IHMuY2xhc3NfdHlwZV9pZCB3aGVyZSBjZC5zdHVkZW50X2lkID0gJyIgLiAgJHN0dWRlbnRfZGF0YS0+c3R1ZGVudF9pZCAuICInIEFORCB5LnllYXJfaWQgPD0gJyIgLiAkc3R1ZGVudF9kYXRhLT55ZWFyX2lkIC4gIicgQU5EIHNzLnNlbWVzdGVyX2lkID0gJyIgLiAkc3R1ZGVudF9kYXRhLT5zZW1lc3Rlcl9pZCAuICInIE9SREVSIEJZIHkueWVhcl9pZCxzcy5zZW1lc3Rlcl9pZCIpIGFzICRyb3cyKSB7DQogICAgICAgICAgaWYgKCR1bml0X2N0ciA+PSAkc3R1ZGVudF91bml0cykgew0KICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgfQ0KICAgICAgICA/Pg0KICAgICAgICAgIDw/cGhwIGlmIChpbl9hcnJheSgkcm93Mlsnc3ViamVjdF9pZCddLCAkc3ViamVjdHMpKSB7ID8+DQogICAgICAgICAgICA8dHI+DQoNCiAgICAgICAgICAgICAgPHRkPjw/PSAkcm93Mlsnc3ViamVjdF9jb2RlJ10gPz48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PD89ICRyb3cyWydzdWJqZWN0X3RpdGxlJ10gPz48L3RkPg0KICAgICAgICAgICAgICA8dGQ+PD89ICRyb3cyWydzdWJqZWN0X3VuaXQnXSA/PjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48Pz0gJHJvdzJbJ2NsYXNzX3R5cGVfbmFtZSddICA/PjwvdGQ+DQogICAgICAgICAgICAgIDx0ZD48Pz0gIWVtcHR5KCRyb3cyWydwcmVfc3ViamVjdF9jb2RlJ10pID8gJHJvdzJbJ3ByZV9zdWJqZWN0X2NvZGUnXSAuICIgKCIgLiAkcm93MlsncHJlX3N1YmplY3RfdGl0bGUnXSAuICIpIiA6ICJOT05FIiA/PjwvdGQ+DQoNCiAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0iUE9TVCI+DQoNCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIGlucHV0LWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVjb21tZW5kZWRfc3ViamVjdF9pZCIgdmFsdWU9Ijw/PSAkcm93MlsncmVjb21tZW5kZWRfc3ViamVjdF9pZCddID8+Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIG5hbWU9ImZlZWRiYWNrIiBpZD0iIiBjbGFzcz0iZm9ybS1jb250cm9sIj48Pz0gJHJvdzJbJ2ZlZWRiYWNrJ10gPz48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tZmxhdCBidG4tc20iPlNhdmU8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQoNCiAgICAgICAgICAgICAgICA8L2Zvcm0+DQogICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPD9waHANCiAgICAgICAgICAgICR1bml0X2N0ciArPSAkcm93Mlsnc3ViamVjdF91bml0J107DQogICAgICAgICAgICAkc3ViamVjdHNbXSA9ICRyb3cyWydzdWJqZWN0X2lkJ107DQogICAgICAgICAgICAkcHJlc3ViamVjdHNbXSA9ICRyb3cyWydwcmVfc3ViamVjdF9pZCddOw0KICAgICAgICAgICAgPz4NCiAgICAgICAgICA8P3BocCB9ICA/Pg0KICAgICAgICA8P3BocCB9ICA/Pg0KDQogICAgICA8L3Rib2R5Pg0KICAgIDwvdGFibGU+DQogIDw/cGhwIH0gKi8gPz4NCiAgPGRpdiBjbGFzcz0iYnV0dG9uLWNvbnRhaW5lciI+DQogICAgPGZvcm0gbWV0aG9kPSJnZXQiPg0KICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic2F2ZV9zdWJqZWN0cyIgdmFsdWU9IjEiPg0KICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iaWQiIHZhbHVlPSI8Pz0gJF9HRVRbJ2lkJ10gPz4iPg0KICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ibG9hZF9zdWJqZWN0cyIgdmFsdWU9IjEiPg0KICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3R1ZGVudF9pZCIgdmFsdWU9Ijw/PSAkc3R1ZGVudF9kYXRhLT5zdHVkZW50X2lkICA/PiI+DQogICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXJyaWN1bHVtX2lkIiB2YWx1ZT0iPD89ICRzdHVkZW50X2RhdGEtPmN1cnJpY3VsdW1faWQgID8+Ij4NCiAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN1YmplY3RzIiB2YWx1ZT0iPD89IGltcGxvZGUoJywnLCAkc3ViamVjdHMpID8+Ij4NCiAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InByZXN1YmplY3RzIiB2YWx1ZT0iPD89IGltcGxvZGUoJywnLCAkcHJlc3ViamVjdHMpID8+Ij4NCiAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InllYXJfaWQiIHZhbHVlPSI8Pz0gJHN0dWRlbnRfZGF0YS0+eWVhcl9pZCA/PiI+DQogICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzZW1lc3Rlcl9pZCIgdmFsdWU9Ijw/PSAkc3R1ZGVudF9kYXRhLT5zZW1lc3Rlcl9pZCA/PiI+DQogICAgICA8YnV0dG9uIGNsYXNzPSJidG4iIHR5cGU9InN1Ym1pdCI+U2F2ZSBTdWJqZWN0czwvYnV0dG9uPg0KICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIiB0eXBlPSJidXR0b24iIG9uY2xpY2s9InByaW50RGF0YSgpIj5QcmludDwvYnV0dG9uPg0KICAgIDwvZm9ybT4NCiAgPC9kaXY+DQo8L2Rpdj4NCg0KDQoNCjxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJtb2RhbC1jcmVhdGUiIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9Im1vZGFsLWFkZC10aXRsZSIgYXJpYS1oaWRkZW49InRydWUiPg0KICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2cgbW9kYWwtZGlhbG9nLWNlbnRlcmVkIiByb2xlPSJkb2N1bWVudCI+DQogICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCIgaWQ9Im1vZGFsLWNyZWF0ZS1jb250ZW50Ij4NCiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciBiZy1wcmltYXJ5IHRleHQtd2hpdGUiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgdy0xMDAganVzdGlmeS1jb250ZW50LWJldHdlZW4gYWxpZ24taXRlbXMtY2VudGVyIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPg0KICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSIgaWQ9Im1vZGFsLWFkZC10aXRsZSI+QWRkIFN1YmplY3Q8L2g0Pg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1hdXRvIj4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2Rpdj4NCiAgICAgIDxmb3JtIG1ldGhvZD0iUE9TVCIgZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSI+DQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImNyZWF0ZSIgdmFsdWU9IjEiPg0KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzdHVkZW50X2lkIiB2YWx1ZT0iPD89ICRfR0VUWydpZCddID8+Ij4NCg0KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkZXBhcnRtZW50LWNvdXJzZSIgY2xhc3M9ImZvbnQtd2VpZ2h0LWJvbGQiPlllYXI6PC9sYWJlbD4NCiAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJ5ZWFyX2lkIiBpZD0ieWVhcl9pZCIgY2xhc3M9ImZvcm0tY29udHJvbCI+DQogICAgICAgICAgICAgICAgPD9waHAgZm9yZWFjaCAoZ2V0X2xpc3QoIlNFTEVDVCAqIGZyb20geWVhcl9sZXZlbHNfdGJsICB3aGVyZSBkZWxldGVkX2ZsYWcgPSAwIikgYXMgJHJvdykgeyA/Pg0KICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iPD89ICRyb3dbJ3llYXJfaWQnXSA/PiI+PD89ICRyb3dbJ3llYXJfbmFtZSddID8+IDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgIDw/cGhwIH0gPz4NCiAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImRlcGFydG1lbnQtY291cnNlIiBjbGFzcz0iZm9udC13ZWlnaHQtYm9sZCI+U2VtZXN0ZXI6PC9sYWJlbD4NCiAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJzZW1lc3Rlcl9pZCIgaWQ9InNlbWVzdGVyX2lkIiBjbGFzcz0iZm9ybS1jb250cm9sIj4NCiAgICAgICAgICAgICAgICA8P3BocCBmb3JlYWNoIChnZXRfbGlzdCgiU0VMRUNUICogZnJvbSBzZW1lc3Rlcl90YmwgIHdoZXJlIGRlbGV0ZWRfZmxhZyA9IDAiKSBhcyAkcm93KSB7ID8+DQogICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI8Pz0gJHJvd1snc2VtZXN0ZXJfaWQnXSA/PiI+PD89ICRyb3dbJ3NlbWVzdGVyX25hbWUnXSA/PiA8L29wdGlvbj4NCiAgICAgICAgICAgICAgICA8P3BocCB9ID8+DQogICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkZXBhcnRtZW50LWNvdXJzZSIgY2xhc3M9ImZvbnQtd2VpZ2h0LWJvbGQiPkNvdXJzZTo8L2xhYmVsPg0KICAgICAgICAgICAgICA8c2VsZWN0IG5hbWU9InN1YmplY3RfaWQiIGlkPSJzdWJqZWN0X2lkIiBjbGFzcz0iZm9ybS1jb250cm9sIj4NCiAgICAgICAgICAgICAgICA8P3BocCBmb3JlYWNoIChnZXRfbGlzdCgiU0VMRUNUIGNjLioscy4qIGZyb20gc3ViamVjdF90YmwgcyBpbm5lciBqb2luIGNsYXNzX3R5cGVfdGJsIGNjIG9uIGNjLmNsYXNzX3R5cGVfaWQgPSBzLmNsYXNzX3R5cGVfaWQgd2hlcmUgcy5kZWxldGVkX2ZsYWcgPSAwIGFuZCBzLnByb2dyYW1faWQgPSAiIC4gJGRhdGEtPnByb2dyYW1faWQpIGFzICRyb3cpIHsgPz4NCiAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ijw/PSAkcm93WydzdWJqZWN0X2lkJ10gPz4iPjw/PSAkcm93WydzdWJqZWN0X2NvZGUnXSA/PiAoPD89ICRyb3dbJ3N1YmplY3RfdGl0bGUnXSA/PikgfCA8Pz0gJHJvd1snY2xhc3NfdHlwZV9uYW1lJ10gPz4gfCA8Pz0gJHJvd1snc3ViamVjdF91bml0J10gPz4gVW5pdHMgPC9vcHRpb24+DQogICAgICAgICAgICAgICAgPD9waHAgfSA/Pg0KICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZGVwYXJ0bWVudC1jb3Vyc2UiIGNsYXNzPSJmb250LXdlaWdodC1ib2xkIj5Dby9QcmVyZXF1aXNpdGU6PC9sYWJlbD4NCiAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJwcmVfc3ViamVjdF9pZCIgaWQ9InByZV9zdWJqZWN0X2lkIiBjbGFzcz0iZm9ybS1jb250cm9sIj4NCiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIwIj5OT05FPC9vcHRpb24+DQogICAgICAgICAgICAgICAgPD9waHAgZm9yZWFjaCAoZ2V0X2xpc3QoIlNFTEVDVCBjYy4qLHMuKiBmcm9tIHN1YmplY3RfdGJsIHMgaW5uZXIgam9pbiBjbGFzc190eXBlX3RibCBjYyBvbiBjYy5jbGFzc190eXBlX2lkID0gcy5jbGFzc190eXBlX2lkIHdoZXJlIHMuZGVsZXRlZF9mbGFnID0gMCBhbmQgcy5wcm9ncmFtX2lkID0gIiAuICRkYXRhLT5wcm9ncmFtX2lkKSBhcyAkcm93KSB7ID8+DQogICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI8Pz0gJHJvd1snc3ViamVjdF9pZCddID8+Ij48Pz0gJHJvd1snc3ViamVjdF9jb2RlJ10gPz4gKDw/PSAkcm93WydzdWJqZWN0X3RpdGxlJ10gPz4pIHwgPD89ICRyb3dbJ2NsYXNzX3R5cGVfbmFtZSddID8+IHwgPD89ICRyb3dbJ3N1YmplY3RfdW5pdCddID8+IFVuaXRzIDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgIDw/cGhwIH0gPz4NCiAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+DQogICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+Q2xvc2U8L2J1dHRvbj4NCiAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij5BZGQ8L2J1dHRvbj4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2Zvcm0+DQogICAgPC9kaXY+DQogIDwvZGl2Pg0KPC9kaXY+DQo8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0ibW9kYWwtY3JlYXRlLXJlY29tbWVuZGF0aW9uIiB0YWJpbmRleD0iLTEiIHJvbGU9ImRpYWxvZyIgYXJpYS1sYWJlbGxlZGJ5PSJtb2RhbC1hZGQtdGl0bGUiIGFyaWEtaGlkZGVuPSJ0cnVlIj4NCiAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWRpYWxvZy1jZW50ZXJlZCIgcm9sZT0iZG9jdW1lbnQiPg0KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiIGlkPSJtb2RhbC1jcmVhdGUtY29udGVudCI+DQogICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIgYmctcHJpbWFyeSB0ZXh0LXdoaXRlIj4NCiAgICAgICAgPGRpdiBjbGFzcz0icm93IHctMTAwIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj4NCiAgICAgICAgICAgIDxoNCBjbGFzcz0ibW9kYWwtdGl0bGUiIGlkPSJtb2RhbC1hZGQtdGl0bGUiPkFkZCBTdWJqZWN0PC9oND4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtYXV0byI+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC9kaXY+DQogICAgICA8Zm9ybSBtZXRob2Q9IlBPU1QiIGVuY3R5cGU9Im11bHRpcGFydC9mb3JtLWRhdGEiPg0KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjcmVhdGVfcmVjb21tZW5kYXRpb24iIHZhbHVlPSIxIj4NCiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3R1ZGVudF9pZCIgdmFsdWU9Ijw/PSAkX0dFVFsnaWQnXSA/PiI+DQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InllYXJfaWQiIHZhbHVlPSI8Pz0gJHN0dWRlbnRfZGF0YS0+eWVhcl9pZCA/PiI+DQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InNlbWVzdGVyX2lkIiB2YWx1ZT0iPD89ICRzdHVkZW50X2RhdGEtPnNlbWVzdGVyX2lkID8+Ij4NCg0KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4NCg0KDQogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZGVwYXJ0bWVudC1jb3Vyc2UiIGNsYXNzPSJmb250LXdlaWdodC1ib2xkIj5Db3Vyc2U6PC9sYWJlbD4NCiAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJzdWJqZWN0X2lkIiBpZD0ic3ViamVjdF9pZCIgY2xhc3M9ImZvcm0tY29udHJvbCI+DQogICAgICAgICAgICAgICAgPD9waHAgZm9yZWFjaCAoZ2V0X2xpc3QoIlNFTEVDVCBjYy4qLHMuKiBmcm9tIHN1YmplY3RfdGJsIHMgaW5uZXIgam9pbiBjbGFzc190eXBlX3RibCBjYyBvbiBjYy5jbGFzc190eXBlX2lkID0gcy5jbGFzc190eXBlX2lkIHdoZXJlIHMuZGVsZXRlZF9mbGFnID0gMCBhbmQgcy5wcm9ncmFtX2lkID0gIiAuICRkYXRhLT5wcm9ncmFtX2lkKSBhcyAkcm93KSB7ID8+DQogICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI8Pz0gJHJvd1snc3ViamVjdF9pZCddID8+Ij48Pz0gJHJvd1snc3ViamVjdF9jb2RlJ10gPz4gKDw/PSAkcm93WydzdWJqZWN0X3RpdGxlJ10gPz4pIHwgPD89ICRyb3dbJ2NsYXNzX3R5cGVfbmFtZSddID8+IHwgPD89ICRyb3dbJ3N1YmplY3RfdW5pdCddID8+IFVuaXRzIDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgIDw/cGhwIH0gPz4NCiAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImRlcGFydG1lbnQtY291cnNlIiBjbGFzcz0iZm9udC13ZWlnaHQtYm9sZCI+Q28vUHJlcmVxdWlzaXRlOjwvbGFiZWw+DQogICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0icHJlX3N1YmplY3RfaWQiIGlkPSJwcmVfc3ViamVjdF9pZCIgY2xhc3M9ImZvcm0tY29udHJvbCI+DQogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMCI+Tk9ORTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgIDw/cGhwIGZvcmVhY2ggKGdldF9saXN0KCJTRUxFQ1QgY2MuKixzLiogZnJvbSBzdWJqZWN0X3RibCBzIGlubmVyIGpvaW4gY2xhc3NfdHlwZV90YmwgY2Mgb24gY2MuY2xhc3NfdHlwZV9pZCA9IHMuY2xhc3NfdHlwZV9pZCB3aGVyZSBzLmRlbGV0ZWRfZmxhZyA9IDAgYW5kIHMucHJvZ3JhbV9pZCA9ICIgLiAkZGF0YS0+cHJvZ3JhbV9pZCkgYXMgJHJvdykgeyA/Pg0KICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iPD89ICRyb3dbJ3N1YmplY3RfaWQnXSA/PiI+PD89ICRyb3dbJ3N1YmplY3RfY29kZSddID8+ICg8Pz0gJHJvd1snc3ViamVjdF90aXRsZSddID8+KSB8IDw/PSAkcm93WydjbGFzc190eXBlX25hbWUnXSA/PiB8IDw/PSAkcm93WydzdWJqZWN0X3VuaXQnXSA/PiBVbml0cyA8L29wdGlvbj4NCiAgICAgICAgICAgICAgICA8P3BocCB9ID8+DQogICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPg0KICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIGRhdGEtZGlzbWlzcz0ibW9kYWwiPkNsb3NlPC9idXR0b24+DQogICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSI+QWRkPC9idXR0b24+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPC9mb3JtPg0KICAgIDwvZGl2Pg0KICA8L2Rpdj4NCjwvZGl2Pg0KPCEtLSAvLm1vZGFsLWRpYWxvZyAtLT4NCjxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJtb2RhbC1lZGl0Ij4NCiAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWRpYWxvZy1jZW50ZXJlZCIgcm9sZT0iZG9jdW1lbnQiPg0KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiIGlkPSJtb2RhbC1lZGl0LWNvbnRlbnQiPg0KDQogICAgPC9kaXY+DQogIDwvZGl2Pg0KPC9kaXY+DQo8c2NyaXB0Pg0KICBmdW5jdGlvbiBwcmludERhdGEoKSB7DQogICAgLy8gR2V0IHRoZSBIVE1MIG9mIHRoZSB0YWJsZSBhbmQgdGhlIGFkZGl0aW9uYWwgZGl2DQogICAgdmFyIHRhYmxlQ29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwcmludFRhYmxlIikuaW5uZXJIVE1MOw0KICAgIHZhciBhZGRpdGlvbmFsQ29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYWluLWNvbnRlbnQiKS5pbm5lckhUTUw7DQoNCiAgICAvLyBHZXQgdGhlIEhUTUwgb2YgdGhlIHdob2xlIHBhZ2UNCiAgICB2YXIgb2xkUGFnZSA9IGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MOw0KDQogICAgLy8gSW5jbHVkZSB0aGUgc3BlY2lmaWVkIGxpbmtzIGluIHRoZSBkeW5hbWljYWxseSBjcmVhdGVkIEhUTUwNCiAgICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9DQogICAgICBgDQogICAgICA8aHRtbD4NCiAgICAgIDxoZWFkPg0KICAgICAgICA8dGl0bGU+UHJpbnQ8L3RpdGxlPg0KICAgICAgICA8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjMuMC1hbHBoYTEvZGlzdC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+DQogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLi4vLi4vY3NzL3JlY29tbWVuZGF0aW9uLmNzcyI+DQogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vYm9vdHN0cmFwLWljb25zL2ZvbnQvYm9vdHN0cmFwLWljb25zLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4NCiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9U291cmNlK1NhbnMrUHJvOjMwMCw0MDAsNDAwaSw3MDAmZGlzcGxheT1mYWxsYmFjayI+DQogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLi4vLi4vcGx1Z2lucy9mb250YXdlc29tZS1mcmVlL2Nzcy9hbGwubWluLmNzcyI+DQogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jb2RlLmlvbmljZnJhbWV3b3JrLmNvbS9pb25pY29ucy8yLjAuMS9jc3MvaW9uaWNvbnMubWluLmNzcyI+DQogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLi4vLi4vcGx1Z2lucy90ZW1wdXNkb21pbnVzLWJvb3RzdHJhcC00L2Nzcy90ZW1wdXNkb21pbnVzLWJvb3RzdHJhcC00Lm1pbi5jc3MiPg0KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uLy4uL3BsdWdpbnMvaWNoZWNrLWJvb3RzdHJhcC9pY2hlY2stYm9vdHN0cmFwLm1pbi5jc3MiPg0KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uLy4uL3BsdWdpbnMvanF2bWFwL2pxdm1hcC5taW4uY3NzIj4NCiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJkaXN0L2Nzcy9hZG1pbmx0ZS5taW4uY3NzIj4NCiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi8uLi9wbHVnaW5zL292ZXJsYXlTY3JvbGxiYXJzL2Nzcy9PdmVybGF5U2Nyb2xsYmFycy5taW4uY3NzIj4NCiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi8uLi9wbHVnaW5zL2RhdGVyYW5nZXBpY2tlci9kYXRlcmFuZ2VwaWNrZXIuY3NzIj4NCiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi8uLi9wbHVnaW5zL3N1bW1lcm5vdGUvc3VtbWVybm90ZS1iczQubWluLmNzcyI+DQogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLi4vLi4vZXZhbHVhdGlvbi5jc3MiPg0KICAgICAgICAgICAgICAgPHN0eWxlPg0KICAgICAgICAgIEBtZWRpYSBwcmludCB7DQogICAgICAgICAgICB0YWJsZSB0ZDpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIDwvc3R5bGU+DQogICAgICA8L2hlYWQ+DQogICAgICA8Ym9keT4NCiAgICAgICAgPGRpdiBzdHlsZT0ncGFkZGluZzogMHB4IDEwMXB4Jz4ke2FkZGl0aW9uYWxDb250ZW50fTwvZGl2Pg0KICAgICAgICAke3RhYmxlQ29udGVudH0NCiAgICAgIDwvYm9keT4NCiAgICAgIDwvaHRtbD4NCiAgICAgIGA7DQoNCiAgICAvLyBQcmludCB0aGUgcGFnZQ0KICAgIHdpbmRvdy5wcmludCgpOw0KDQogICAgLy8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgSFRNTA0KICAgIGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gb2xkUGFnZTsNCiAgfQ0KPC9zY3JpcHQ+DQo8P3BocA0KaW5jbHVkZV9vbmNlKCdmb290ZXIucGhwJyk7DQoNCj8+IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGRvY0Jsb2NrIjtOO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";